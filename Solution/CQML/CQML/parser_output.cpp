#include "output0outer.h"
#include"parser_output.h"
#include "qml_includes.h"
void _QML_Update();
void _QML_ClassTabsInit();
void _QML_Draw();
CQMLGUI::Element* root;

void _QML_Start()
{
	SetInitHashTabs(&InitHashTabs);
	QMLInitHashes();
	root = (CQMLGUI::Element*) CQMLGUI::acGUI_Rootoutput0();
	CQMLGUI::SetRoot(root);
	_QML_Update();
}

void _QML_Update()
{
	CQMLGUI::PreUpdate();
	root->Update();
	CQMLGUI::PostUpdate();
}

void _QML_Draw()
{
	CQMLGUI::PreDraw();
	root->Draw();
	CQMLGUI::PostDraw();
}
// print default constructors;
using namespace CQMLGUI;
void InitHashTabs(ClassHashTable * hashTabs)
{
ClassHashTable * data;
InitClassesSize(hashTabs, 11);


 //PrintClassTabs()

data=&hashTabs[0];
InitHashTab(data,9,3);
data->keys[0]=(char *)malloc(sizeof(char) * 4);
strcpy(data->keys[0],"red");
data->keys[1]=(char *)malloc(sizeof(char) * 6);
strcpy(data->keys[1],"green");
data->keys[2]=(char *)malloc(sizeof(char) * 5);
strcpy(data->keys[2],"blue");

data->T1[0]=8;
data->T1[1]=7;
data->T1[2]=7;

data->T2[0]=2;
data->T2[1]=6;
data->T2[2]=5;

data->g[0]=0;
data->g[1]=0;
data->g[2]=0;
data->g[3]=0;
data->g[4]=0;
data->g[5]=2;
data->g[6]=0;
data->g[7]=1;
data->g[8]=0;


data=&hashTabs[1];
InitHashTab(data,15,5);
data->keys[0]=(char *)malloc(sizeof(char) * 8);
strcpy(data->keys[0],"capital");
data->keys[1]=(char *)malloc(sizeof(char) * 7);
strcpy(data->keys[1],"italic");
data->keys[2]=(char *)malloc(sizeof(char) * 5);
strcpy(data->keys[2],"bold");
data->keys[3]=(char *)malloc(sizeof(char) * 5);
strcpy(data->keys[3],"size");
data->keys[4]=(char *)malloc(sizeof(char) * 7);
strcpy(data->keys[4],"family");

data->T1[0]=6;
data->T1[1]=2;
data->T1[2]=7;
data->T1[3]=6;
data->T1[4]=8;

data->T2[0]=9;
data->T2[1]=3;
data->T2[2]=7;
data->T2[3]=11;
data->T2[4]=5;

data->g[0]=0;
data->g[1]=0;
data->g[2]=0;
data->g[3]=0;
data->g[4]=1;
data->g[5]=3;
data->g[6]=0;
data->g[7]=0;
data->g[8]=0;
data->g[9]=0;
data->g[10]=0;
data->g[11]=2;
data->g[12]=0;
data->g[13]=1;
data->g[14]=0;


data=&hashTabs[2];
InitHashTab(data,3,1);
data->keys[0]=(char *)malloc(sizeof(char) * 4);
strcpy(data->keys[0],"src");

data->T1[0]=0;

data->T2[0]=1;

data->g[0]=0;
data->g[1]=0;
data->g[2]=0;


data=&hashTabs[3];
InitHashTab(data,31,10);
data->keys[0]=(char *)malloc(sizeof(char) * 5);
strcpy(data->keys[0],"root");
data->keys[1]=(char *)malloc(sizeof(char) * 7);
strcpy(data->keys[1],"parent");
data->keys[2]=(char *)malloc(sizeof(char) * 9);
strcpy(data->keys[2],"children");
data->keys[3]=(char *)malloc(sizeof(char) * 14);
strcpy(data->keys[3],"childrenCount");
data->keys[4]=(char *)malloc(sizeof(char) * 6);
strcpy(data->keys[4],"flags");
data->keys[5]=(char *)malloc(sizeof(char) * 2);
strcpy(data->keys[5],"x");
data->keys[6]=(char *)malloc(sizeof(char) * 2);
strcpy(data->keys[6],"y");
data->keys[7]=(char *)malloc(sizeof(char) * 6);
strcpy(data->keys[7],"width");
data->keys[8]=(char *)malloc(sizeof(char) * 7);
strcpy(data->keys[8],"height");
data->keys[9]=(char *)malloc(sizeof(char) * 6);
strcpy(data->keys[9],"focus");

data->T1[0]=18;
data->T1[1]=19;
data->T1[2]=11;
data->T1[3]=29;
data->T1[4]=7;
data->T1[5]=18;
data->T1[6]=17;
data->T1[7]=5;
data->T1[8]=10;
data->T1[9]=12;

data->T2[0]=17;
data->T2[1]=18;
data->T2[2]=1;
data->T2[3]=29;
data->T2[4]=3;
data->T2[5]=11;
data->T2[6]=0;
data->T2[7]=29;
data->T2[8]=22;
data->T2[9]=22;

data->g[0]=0;
data->g[1]=0;
data->g[2]=0;
data->g[3]=0;
data->g[4]=0;
data->g[5]=0;
data->g[6]=0;
data->g[7]=0;
data->g[8]=4;
data->g[9]=0;
data->g[10]=0;
data->g[11]=2;
data->g[12]=0;
data->g[13]=2;
data->g[14]=0;
data->g[15]=0;
data->g[16]=3;
data->g[17]=0;
data->g[18]=0;
data->g[19]=0;
data->g[20]=0;
data->g[21]=6;
data->g[22]=1;
data->g[23]=8;
data->g[24]=0;
data->g[25]=9;
data->g[26]=0;
data->g[27]=0;
data->g[28]=0;
data->g[29]=7;
data->g[30]=0;


data=&hashTabs[4];
InitHashTab(data,39,13);
data->keys[0]=(char *)malloc(sizeof(char) * 12);
strcpy(data->keys[0],"borderColor");
data->keys[1]=(char *)malloc(sizeof(char) * 7);
strcpy(data->keys[1],"border");
data->keys[2]=(char *)malloc(sizeof(char) * 6);
strcpy(data->keys[2],"color");
data->keys[3]=(char *)malloc(sizeof(char) * 5);
strcpy(data->keys[3],"root");
data->keys[4]=(char *)malloc(sizeof(char) * 7);
strcpy(data->keys[4],"parent");
data->keys[5]=(char *)malloc(sizeof(char) * 9);
strcpy(data->keys[5],"children");
data->keys[6]=(char *)malloc(sizeof(char) * 14);
strcpy(data->keys[6],"childrenCount");
data->keys[7]=(char *)malloc(sizeof(char) * 6);
strcpy(data->keys[7],"flags");
data->keys[8]=(char *)malloc(sizeof(char) * 2);
strcpy(data->keys[8],"x");
data->keys[9]=(char *)malloc(sizeof(char) * 2);
strcpy(data->keys[9],"y");
data->keys[10]=(char *)malloc(sizeof(char) * 6);
strcpy(data->keys[10],"width");
data->keys[11]=(char *)malloc(sizeof(char) * 7);
strcpy(data->keys[11],"height");
data->keys[12]=(char *)malloc(sizeof(char) * 6);
strcpy(data->keys[12],"focus");

data->T1[0]=25;
data->T1[1]=18;
data->T1[2]=33;
data->T1[3]=12;
data->T1[4]=31;
data->T1[5]=20;
data->T1[6]=36;
data->T1[7]=9;
data->T1[8]=35;
data->T1[9]=34;
data->T1[10]=13;
data->T1[11]=10;
data->T1[12]=26;

data->T2[0]=27;
data->T2[1]=32;
data->T2[2]=8;
data->T2[3]=34;
data->T2[4]=13;
data->T2[5]=37;
data->T2[6]=35;
data->T2[7]=31;
data->T2[8]=0;
data->T2[9]=9;
data->T2[10]=33;
data->T2[11]=2;
data->T2[12]=0;

data->g[0]=0;
data->g[1]=0;
data->g[2]=0;
data->g[3]=0;
data->g[4]=0;
data->g[5]=5;
data->g[6]=0;
data->g[7]=0;
data->g[8]=0;
data->g[9]=0;
data->g[10]=0;
data->g[11]=4;
data->g[12]=1;
data->g[13]=0;
data->g[14]=0;
data->g[15]=0;
data->g[16]=7;
data->g[17]=0;
data->g[18]=0;
data->g[19]=0;
data->g[20]=0;
data->g[21]=6;
data->g[22]=0;
data->g[23]=0;
data->g[24]=0;
data->g[25]=0;
data->g[26]=0;
data->g[27]=0;
data->g[28]=1;
data->g[29]=0;
data->g[30]=9;
data->g[31]=12;
data->g[32]=0;
data->g[33]=9;
data->g[34]=0;
data->g[35]=8;
data->g[36]=8;
data->g[37]=0;
data->g[38]=3;


data=&hashTabs[5];
InitHashTab(data,31,10);
data->keys[0]=(char *)malloc(sizeof(char) * 5);
strcpy(data->keys[0],"root");
data->keys[1]=(char *)malloc(sizeof(char) * 7);
strcpy(data->keys[1],"parent");
data->keys[2]=(char *)malloc(sizeof(char) * 9);
strcpy(data->keys[2],"children");
data->keys[3]=(char *)malloc(sizeof(char) * 14);
strcpy(data->keys[3],"childrenCount");
data->keys[4]=(char *)malloc(sizeof(char) * 6);
strcpy(data->keys[4],"flags");
data->keys[5]=(char *)malloc(sizeof(char) * 2);
strcpy(data->keys[5],"x");
data->keys[6]=(char *)malloc(sizeof(char) * 2);
strcpy(data->keys[6],"y");
data->keys[7]=(char *)malloc(sizeof(char) * 6);
strcpy(data->keys[7],"width");
data->keys[8]=(char *)malloc(sizeof(char) * 7);
strcpy(data->keys[8],"height");
data->keys[9]=(char *)malloc(sizeof(char) * 6);
strcpy(data->keys[9],"focus");

data->T1[0]=0;
data->T1[1]=25;
data->T1[2]=4;
data->T1[3]=0;
data->T1[4]=8;
data->T1[5]=23;
data->T1[6]=11;
data->T1[7]=13;
data->T1[8]=27;
data->T1[9]=9;

data->T2[0]=29;
data->T2[1]=1;
data->T2[2]=23;
data->T2[3]=12;
data->T2[4]=15;
data->T2[5]=8;
data->T2[6]=5;
data->T2[7]=28;
data->T2[8]=11;
data->T2[9]=8;

data->g[0]=0;
data->g[1]=0;
data->g[2]=0;
data->g[3]=0;
data->g[4]=0;
data->g[5]=0;
data->g[6]=6;
data->g[7]=0;
data->g[8]=5;
data->g[9]=0;
data->g[10]=0;
data->g[11]=0;
data->g[12]=4;
data->g[13]=7;
data->g[14]=6;
data->g[15]=0;
data->g[16]=0;
data->g[17]=0;
data->g[18]=0;
data->g[19]=0;
data->g[20]=0;
data->g[21]=0;
data->g[22]=0;
data->g[23]=7;
data->g[24]=2;
data->g[25]=0;
data->g[26]=0;
data->g[27]=0;
data->g[28]=8;
data->g[29]=0;
data->g[30]=5;


data=&hashTabs[6];
InitHashTab(data,12,4);
data->keys[0]=(char *)malloc(sizeof(char) * 4);
strcpy(data->keys[0],"top");
data->keys[1]=(char *)malloc(sizeof(char) * 7);
strcpy(data->keys[1],"bottom");
data->keys[2]=(char *)malloc(sizeof(char) * 5);
strcpy(data->keys[2],"left");
data->keys[3]=(char *)malloc(sizeof(char) * 6);
strcpy(data->keys[3],"right");

data->T1[0]=7;
data->T1[1]=2;
data->T1[2]=6;
data->T1[3]=4;

data->T2[0]=7;
data->T2[1]=11;
data->T2[2]=10;
data->T2[3]=3;

data->g[0]=0;
data->g[1]=0;
data->g[2]=0;
data->g[3]=0;
data->g[4]=0;
data->g[5]=0;
data->g[6]=0;
data->g[7]=2;
data->g[8]=0;
data->g[9]=0;
data->g[10]=1;
data->g[11]=3;


data=&hashTabs[7];
InitHashTab(data,48,16);
data->keys[0]=(char *)malloc(sizeof(char) * 11);
strcpy(data->keys[0],"text_color");
data->keys[1]=(char *)malloc(sizeof(char) * 5);
strcpy(data->keys[1],"text");
data->keys[2]=(char *)malloc(sizeof(char) * 5);
strcpy(data->keys[2],"font");
data->keys[3]=(char *)malloc(sizeof(char) * 12);
strcpy(data->keys[3],"borderColor");
data->keys[4]=(char *)malloc(sizeof(char) * 7);
strcpy(data->keys[4],"border");
data->keys[5]=(char *)malloc(sizeof(char) * 6);
strcpy(data->keys[5],"color");
data->keys[6]=(char *)malloc(sizeof(char) * 5);
strcpy(data->keys[6],"root");
data->keys[7]=(char *)malloc(sizeof(char) * 7);
strcpy(data->keys[7],"parent");
data->keys[8]=(char *)malloc(sizeof(char) * 9);
strcpy(data->keys[8],"children");
data->keys[9]=(char *)malloc(sizeof(char) * 14);
strcpy(data->keys[9],"childrenCount");
data->keys[10]=(char *)malloc(sizeof(char) * 6);
strcpy(data->keys[10],"flags");
data->keys[11]=(char *)malloc(sizeof(char) * 2);
strcpy(data->keys[11],"x");
data->keys[12]=(char *)malloc(sizeof(char) * 2);
strcpy(data->keys[12],"y");
data->keys[13]=(char *)malloc(sizeof(char) * 6);
strcpy(data->keys[13],"width");
data->keys[14]=(char *)malloc(sizeof(char) * 7);
strcpy(data->keys[14],"height");
data->keys[15]=(char *)malloc(sizeof(char) * 6);
strcpy(data->keys[15],"focus");

data->T1[0]=1;
data->T1[1]=37;
data->T1[2]=47;
data->T1[3]=5;
data->T1[4]=39;
data->T1[5]=23;
data->T1[6]=41;
data->T1[7]=47;
data->T1[8]=26;
data->T1[9]=37;
data->T1[10]=28;
data->T1[11]=7;
data->T1[12]=32;
data->T1[13]=-842150451;
data->T1[14]=-842150451;
data->T1[15]=-842150451;

data->T2[0]=36;
data->T2[1]=5;
data->T2[2]=18;
data->T2[3]=35;
data->T2[4]=6;
data->T2[5]=11;
data->T2[6]=18;
data->T2[7]=28;
data->T2[8]=20;
data->T2[9]=31;
data->T2[10]=9;
data->T2[11]=32;
data->T2[12]=46;
data->T2[13]=-842150451;
data->T2[14]=-842150451;
data->T2[15]=-842150451;

data->g[0]=0;
data->g[1]=0;
data->g[2]=0;
data->g[3]=0;
data->g[4]=0;
data->g[5]=0;
data->g[6]=0;
data->g[7]=0;
data->g[8]=0;
data->g[9]=0;
data->g[10]=0;
data->g[11]=0;
data->g[12]=7;
data->g[13]=0;
data->g[14]=0;
data->g[15]=0;
data->g[16]=0;
data->g[17]=0;
data->g[18]=0;
data->g[19]=0;
data->g[20]=0;
data->g[21]=0;
data->g[22]=0;
data->g[23]=4;
data->g[24]=11;
data->g[25]=0;
data->g[26]=0;
data->g[27]=10;
data->g[28]=0;
data->g[29]=10;
data->g[30]=12;
data->g[31]=14;
data->g[32]=0;
data->g[33]=0;
data->g[34]=6;
data->g[35]=0;
data->g[36]=12;
data->g[37]=0;
data->g[38]=0;
data->g[39]=3;
data->g[40]=7;
data->g[41]=1;
data->g[42]=8;
data->g[43]=14;
data->g[44]=13;
data->g[45]=0;
data->g[46]=0;
data->g[47]=0;


data=&hashTabs[8];
InitHashTab(data,48,16);
data->keys[0]=(char *)malloc(sizeof(char) * 11);
strcpy(data->keys[0],"text_color");
data->keys[1]=(char *)malloc(sizeof(char) * 5);
strcpy(data->keys[1],"text");
data->keys[2]=(char *)malloc(sizeof(char) * 5);
strcpy(data->keys[2],"font");
data->keys[3]=(char *)malloc(sizeof(char) * 12);
strcpy(data->keys[3],"borderColor");
data->keys[4]=(char *)malloc(sizeof(char) * 7);
strcpy(data->keys[4],"border");
data->keys[5]=(char *)malloc(sizeof(char) * 6);
strcpy(data->keys[5],"color");
data->keys[6]=(char *)malloc(sizeof(char) * 5);
strcpy(data->keys[6],"root");
data->keys[7]=(char *)malloc(sizeof(char) * 7);
strcpy(data->keys[7],"parent");
data->keys[8]=(char *)malloc(sizeof(char) * 9);
strcpy(data->keys[8],"children");
data->keys[9]=(char *)malloc(sizeof(char) * 14);
strcpy(data->keys[9],"childrenCount");
data->keys[10]=(char *)malloc(sizeof(char) * 6);
strcpy(data->keys[10],"flags");
data->keys[11]=(char *)malloc(sizeof(char) * 2);
strcpy(data->keys[11],"x");
data->keys[12]=(char *)malloc(sizeof(char) * 2);
strcpy(data->keys[12],"y");
data->keys[13]=(char *)malloc(sizeof(char) * 6);
strcpy(data->keys[13],"width");
data->keys[14]=(char *)malloc(sizeof(char) * 7);
strcpy(data->keys[14],"height");
data->keys[15]=(char *)malloc(sizeof(char) * 6);
strcpy(data->keys[15],"focus");

data->T1[0]=16;
data->T1[1]=26;
data->T1[2]=32;
data->T1[3]=20;
data->T1[4]=29;
data->T1[5]=5;
data->T1[6]=1;
data->T1[7]=3;
data->T1[8]=2;
data->T1[9]=46;
data->T1[10]=41;
data->T1[11]=32;
data->T1[12]=36;
data->T1[13]=-842150451;
data->T1[14]=-842150451;
data->T1[15]=-842150451;

data->T2[0]=11;
data->T2[1]=13;
data->T2[2]=32;
data->T2[3]=40;
data->T2[4]=45;
data->T2[5]=23;
data->T2[6]=18;
data->T2[7]=34;
data->T2[8]=12;
data->T2[9]=10;
data->T2[10]=0;
data->T2[11]=2;
data->T2[12]=40;
data->T2[13]=-842150451;
data->T2[14]=-842150451;
data->T2[15]=-842150451;

data->g[0]=0;
data->g[1]=0;
data->g[2]=0;
data->g[3]=0;
data->g[4]=0;
data->g[5]=0;
data->g[6]=0;
data->g[7]=9;
data->g[8]=0;
data->g[9]=0;
data->g[10]=14;
data->g[11]=0;
data->g[12]=5;
data->g[13]=0;
data->g[14]=0;
data->g[15]=0;
data->g[16]=0;
data->g[17]=4;
data->g[18]=0;
data->g[19]=0;
data->g[20]=0;
data->g[21]=0;
data->g[22]=0;
data->g[23]=0;
data->g[24]=11;
data->g[25]=0;
data->g[26]=13;
data->g[27]=7;
data->g[28]=0;
data->g[29]=8;
data->g[30]=0;
data->g[31]=0;
data->g[32]=0;
data->g[33]=0;
data->g[34]=9;
data->g[35]=12;
data->g[36]=11;
data->g[37]=0;
data->g[38]=2;
data->g[39]=12;
data->g[40]=0;
data->g[41]=6;
data->g[42]=0;
data->g[43]=0;
data->g[44]=0;
data->g[45]=3;
data->g[46]=0;
data->g[47]=0;


data=&hashTabs[9];
InitHashTab(data,33,11);
data->keys[0]=(char *)malloc(sizeof(char) * 4);
strcpy(data->keys[0],"img");
data->keys[1]=(char *)malloc(sizeof(char) * 5);
strcpy(data->keys[1],"root");
data->keys[2]=(char *)malloc(sizeof(char) * 7);
strcpy(data->keys[2],"parent");
data->keys[3]=(char *)malloc(sizeof(char) * 9);
strcpy(data->keys[3],"children");
data->keys[4]=(char *)malloc(sizeof(char) * 14);
strcpy(data->keys[4],"childrenCount");
data->keys[5]=(char *)malloc(sizeof(char) * 6);
strcpy(data->keys[5],"flags");
data->keys[6]=(char *)malloc(sizeof(char) * 2);
strcpy(data->keys[6],"x");
data->keys[7]=(char *)malloc(sizeof(char) * 2);
strcpy(data->keys[7],"y");
data->keys[8]=(char *)malloc(sizeof(char) * 6);
strcpy(data->keys[8],"width");
data->keys[9]=(char *)malloc(sizeof(char) * 7);
strcpy(data->keys[9],"height");
data->keys[10]=(char *)malloc(sizeof(char) * 6);
strcpy(data->keys[10],"focus");

data->T1[0]=24;
data->T1[1]=0;
data->T1[2]=8;
data->T1[3]=18;
data->T1[4]=0;
data->T1[5]=27;
data->T1[6]=26;
data->T1[7]=21;
data->T1[8]=16;
data->T1[9]=28;
data->T1[10]=29;

data->T2[0]=31;
data->T2[1]=11;
data->T2[2]=20;
data->T2[3]=3;
data->T2[4]=17;
data->T2[5]=23;
data->T2[6]=4;
data->T2[7]=4;
data->T2[8]=10;
data->T2[9]=25;
data->T2[10]=20;

data->g[0]=0;
data->g[1]=0;
data->g[2]=0;
data->g[3]=0;
data->g[4]=0;
data->g[5]=0;
data->g[6]=0;
data->g[7]=7;
data->g[8]=0;
data->g[9]=0;
data->g[10]=0;
data->g[11]=2;
data->g[12]=0;
data->g[13]=9;
data->g[14]=0;
data->g[15]=0;
data->g[16]=0;
data->g[17]=8;
data->g[18]=4;
data->g[19]=0;
data->g[20]=0;
data->g[21]=0;
data->g[22]=7;
data->g[23]=10;
data->g[24]=6;
data->g[25]=0;
data->g[26]=9;
data->g[27]=0;
data->g[28]=0;
data->g[29]=9;
data->g[30]=1;
data->g[31]=0;
data->g[32]=0;


data=&hashTabs[10];
InitHashTab(data,45,15);
data->keys[0]=(char *)malloc(sizeof(char) * 11);
strcpy(data->keys[0],"leftBorder");
data->keys[1]=(char *)malloc(sizeof(char) * 13);
strcpy(data->keys[1],"bottomBorder");
data->keys[2]=(char *)malloc(sizeof(char) * 12);
strcpy(data->keys[2],"rightBorder");
data->keys[3]=(char *)malloc(sizeof(char) * 10);
strcpy(data->keys[3],"topBorder");
data->keys[4]=(char *)malloc(sizeof(char) * 4);
strcpy(data->keys[4],"img");
data->keys[5]=(char *)malloc(sizeof(char) * 5);
strcpy(data->keys[5],"root");
data->keys[6]=(char *)malloc(sizeof(char) * 7);
strcpy(data->keys[6],"parent");
data->keys[7]=(char *)malloc(sizeof(char) * 9);
strcpy(data->keys[7],"children");
data->keys[8]=(char *)malloc(sizeof(char) * 14);
strcpy(data->keys[8],"childrenCount");
data->keys[9]=(char *)malloc(sizeof(char) * 6);
strcpy(data->keys[9],"flags");
data->keys[10]=(char *)malloc(sizeof(char) * 2);
strcpy(data->keys[10],"x");
data->keys[11]=(char *)malloc(sizeof(char) * 2);
strcpy(data->keys[11],"y");
data->keys[12]=(char *)malloc(sizeof(char) * 6);
strcpy(data->keys[12],"width");
data->keys[13]=(char *)malloc(sizeof(char) * 7);
strcpy(data->keys[13],"height");
data->keys[14]=(char *)malloc(sizeof(char) * 6);
strcpy(data->keys[14],"focus");

data->T1[0]=5;
data->T1[1]=12;
data->T1[2]=32;
data->T1[3]=23;
data->T1[4]=33;
data->T1[5]=0;
data->T1[6]=36;
data->T1[7]=21;
data->T1[8]=23;
data->T1[9]=28;
data->T1[10]=4;
data->T1[11]=2;
data->T1[12]=2;
data->T1[13]=-842150451;
data->T1[14]=-842150451;

data->T2[0]=0;
data->T2[1]=40;
data->T2[2]=27;
data->T2[3]=42;
data->T2[4]=21;
data->T2[5]=24;
data->T2[6]=3;
data->T2[7]=3;
data->T2[8]=13;
data->T2[9]=23;
data->T2[10]=42;
data->T2[11]=21;
data->T2[12]=16;
data->T2[13]=-842150451;
data->T2[14]=-842150451;

data->g[0]=0;
data->g[1]=0;
data->g[2]=0;
data->g[3]=0;
data->g[4]=9;
data->g[5]=0;
data->g[6]=0;
data->g[7]=0;
data->g[8]=0;
data->g[9]=0;
data->g[10]=6;
data->g[11]=0;
data->g[12]=0;
data->g[13]=0;
data->g[14]=13;
data->g[15]=10;
data->g[16]=0;
data->g[17]=0;
data->g[18]=6;
data->g[19]=0;
data->g[20]=11;
data->g[21]=0;
data->g[22]=0;
data->g[23]=0;
data->g[24]=5;
data->g[25]=0;
data->g[26]=0;
data->g[27]=0;
data->g[28]=0;
data->g[29]=0;
data->g[30]=12;
data->g[31]=0;
data->g[32]=0;
data->g[33]=0;
data->g[34]=0;
data->g[35]=7;
data->g[36]=9;
data->g[37]=8;
data->g[38]=0;
data->g[39]=0;
data->g[40]=12;
data->g[41]=0;
data->g[42]=14;
data->g[43]=0;
data->g[44]=4;


}

